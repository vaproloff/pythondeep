# –ó–∞–¥–∞–Ω–∏–µ No4
# üìå –ù–∞–ø–∏—à–∏—Ç–µ –¥–ª—è –∑–∞–¥–∞—á–∏ 1 —Ç–µ—Å—Ç—ã pytest. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã:
# üìå –≤–æ–∑–≤—Ä–∞—Ç —Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
# üìå –≤–æ–∑–≤—Ä–∞—Ç —Å—Ç—Ä–æ–∫–∏ —Å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞ –±–µ–∑ –ø–æ—Ç–µ—Ä–∏ —Å–∏–º–≤–æ–ª–æ–≤
# üìå –≤–æ–∑–≤—Ä–∞—Ç —Å—Ç—Ä–æ–∫–∏ —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –∑–Ω–∞–∫–æ–≤ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–∏
# üìå –≤–æ–∑–≤—Ä–∞—Ç —Å—Ç—Ä–æ–∫–∏ —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –±—É–∫–≤ –¥—Ä—É–≥–∏—Ö –∞–ª—Ñ–∞–≤–∏—Ç–æ–≤
# üìå –≤–æ–∑–≤—Ä–∞—Ç —Å—Ç—Ä–æ–∫–∏ —Å —É—á—ë—Ç–æ–º –≤—Å–µ—Ö –≤—ã—à–µ–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ (–∫—Ä–æ–º–µ –ø. 1)

from string import ascii_letters

import pytest


def filter_lower(text: str) -> str:
    return (''.join(char for char in text if char in ascii_letters or char == ' ')).lower()


def test_no_change():
    assert filter_lower('hello world') == 'hello world', '–ü—Ä–æ–∏–∑–æ—à–ª–∏ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏'


def test_lower():
    assert filter_lower('Hello World') == 'hello world', '–û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É'


def test_symbols():
    assert filter_lower('hello, world!') == 'hello world', '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–Ω–∞–∫–æ–≤ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–∏'


def test_foreign_letters():
    assert filter_lower('hello–ø—Ä–∏–≤–µ—Ç world–º–∏—Ä') == 'hello world', '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤ –¥—Ä—É–≥–∏—Ö —è–∑—ã–∫–æ–≤'


def test_mixed():
    assert filter_lower('Hello! –ü—Ä–∏–≤–µ—Ç,World–º–∏—Ä!') == 'hello world', '–ö–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞'


if __name__ == '__main__':
    pytest.main(['-vv'])
